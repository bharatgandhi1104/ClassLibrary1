// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

using System.Reflection;
using System.Runtime.Serialization;

namespace System.Collections.Specialized
{
    public abstract class NameObjectCollectionBase : ICollection, IEnumerable, ISerializable, IDeserializationCallback
    {
#pragma warning disable CS0824 // Constructor is marked external
        protected extern NameObjectCollectionBase();
#pragma warning restore CS0824 // Constructor is marked external
        //
        // Summary:
        //     Initializes a new instance of the System.Collections.Specialized.NameObjectCollectionBase
        //     class that is empty, has the default initial capacity, and uses the specified
        //     System.Collections.IEqualityComparer object.
        //
        // Parameters:
        //   equalityComparer:
        //     The System.Collections.IEqualityComparer object to use to determine whether two
        //     keys are equal and to generate hash codes for the keys in the collection.
#pragma warning disable CS0824 // Constructor is marked external
        protected extern NameObjectCollectionBase(IEqualityComparer equalityComparer);
#pragma warning restore CS0824 // Constructor is marked external
        //
        // Summary:
        //     Initializes a new instance of the System.Collections.Specialized.NameObjectCollectionBase
        //     class that is empty, has the specified initial capacity, and uses the default
        //     hash code provider and the default comparer.
        //
        // Parameters:
        //   capacity:
        //     The approximate number of entries that the System.Collections.Specialized.NameObjectCollectionBase
        //     instance can initially contain.
        //
        // Exceptions:
        //   T:System.ArgumentOutOfRangeException:
        //     capacity is less than zero.
#pragma warning disable CS0824 // Constructor is marked external
        protected extern NameObjectCollectionBase(int capacity);
#pragma warning restore CS0824 // Constructor is marked external
        //
        // Summary:
        //     Initializes a new instance of the System.Collections.Specialized.NameObjectCollectionBase
        //     class that is empty, has the specified initial capacity, and uses the specified
        //     System.Collections.IEqualityComparer object.
        //
        // Parameters:
        //   capacity:
        //     The approximate number of entries that the System.Collections.Specialized.NameObjectCollectionBase
        //     object can initially contain.
        //
        //   equalityComparer:
        //     The System.Collections.IEqualityComparer object to use to determine whether two
        //     keys are equal and to generate hash codes for the keys in the collection.
        //
        // Exceptions:
        //   T:System.ArgumentOutOfRangeException:
        //     capacity is less than zero.
#pragma warning disable CS0824 // Constructor is marked external
        protected extern NameObjectCollectionBase(int capacity, IEqualityComparer equalityComparer);
#pragma warning restore CS0824 // Constructor is marked external
        //
        // Summary:
        //     Initializes a new instance of the System.Collections.Specialized.NameObjectCollectionBase
        //     class that is empty, has the default initial capacity, and uses the specified
        //     hash code provider and the specified comparer.
        //
        // Parameters:
        //   hashProvider:
        //     The System.Collections.IHashCodeProvider that will supply the hash codes for
        //     all keys in the System.Collections.Specialized.NameObjectCollectionBase instance.
        //
        //   comparer:
        //     The System.Collections.IComparer to use to determine whether two keys are equal.
        [Obsolete("Please use NameObjectCollectionBase(IEqualityComparer) instead.")]
        protected extern NameObjectCollectionBase(IHashCodeProvider hashProvider, IComparer comparer);

        //
        // Summary:
        //     Initializes a new instance of the System.Collections.Specialized.NameObjectCollectionBase
        //     class that is serializable and uses the specified System.Runtime.Serialization.SerializationInfo
        //     and System.Runtime.Serialization.StreamingContext.
        //
        // Parameters:
        //   info:
        //     A System.Runtime.Serialization.SerializationInfo object that contains the information
        //     required to serialize the new System.Collections.Specialized.NameObjectCollectionBase
        //     instance.
        //
        //   context:
        //     A System.Runtime.Serialization.StreamingContext object that contains the source
        //     and destination of the serialized stream associated with the new System.Collections.Specialized.NameObjectCollectionBase
        //     instance.
#pragma warning disable CS0824 // Constructor is marked external
        protected extern NameObjectCollectionBase(SerializationInfo info, StreamingContext context);
#pragma warning restore CS0824 // Constructor is marked external
        //
        // Summary:
        //     Initializes a new instance of the System.Collections.Specialized.NameObjectCollectionBase
        //     class that is empty, has the specified initial capacity and uses the specified
        //     hash code provider and the specified comparer.
        //
        // Parameters:
        //   capacity:
        //     The approximate number of entries that the System.Collections.Specialized.NameObjectCollectionBase
        //     instance can initially contain.
        //
        //   hashProvider:
        //     The System.Collections.IHashCodeProvider that will supply the hash codes for
        //     all keys in the System.Collections.Specialized.NameObjectCollectionBase instance.
        //
        //   comparer:
        //     The System.Collections.IComparer to use to determine whether two keys are equal.
        //
        // Exceptions:
        //   T:System.ArgumentOutOfRangeException:
        //     capacity is less than zero.
        [Obsolete("Please use NameObjectCollectionBase(Int32, IEqualityComparer) instead.")]
        protected extern NameObjectCollectionBase(int capacity, IHashCodeProvider hashProvider, IComparer comparer);

        //
        // Summary:
        //     Gets the number of key/value pairs contained in the System.Collections.Specialized.NameObjectCollectionBase
        //     instance.
        //
        // Returns:
        //     The number of key/value pairs contained in the System.Collections.Specialized.NameObjectCollectionBase
        //     instance.
        public virtual int Count { get; }
        //
        // Summary:
        //     Gets a System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
        //     instance that contains all the keys in the System.Collections.Specialized.NameObjectCollectionBase
        //     instance.
        //
        // Returns:
        //     A System.Collections.Specialized.NameObjectCollectionBase.KeysCollection instance
        //     that contains all the keys in the System.Collections.Specialized.NameObjectCollectionBase
        //     instance.
        public virtual KeysCollection Keys { get; }

        public bool IsSynchronized => throw new NotImplementedException();

        public object SyncRoot => throw new NotImplementedException();

        //
        // Summary:
        //     Gets or sets a value indicating whether the System.Collections.Specialized.NameObjectCollectionBase
        //     instance is read-only.
        //
        // Returns:
        //     true if the System.Collections.Specialized.NameObjectCollectionBase instance
        //     is read-only; otherwise, false.
        protected bool IsReadOnly { get; set; }

        public void CopyTo(Array array, int index)
        {
            throw new NotImplementedException();
        }


        //
        // Summary:
        //     Returns an enumerator that iterates through the System.Collections.Specialized.NameObjectCollectionBase.
        //
        // Returns:
        //     An System.Collections.IEnumerator for the System.Collections.Specialized.NameObjectCollectionBase
        //     instance.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        public extern virtual IEnumerator GetEnumerator();
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     Implements the System.Runtime.Serialization.ISerializable interface and returns
        //     the data needed to serialize the System.Collections.Specialized.NameObjectCollectionBase
        //     instance.
        //
        // Parameters:
        //   info:
        //     A System.Runtime.Serialization.SerializationInfo object that contains the information
        //     required to serialize the System.Collections.Specialized.NameObjectCollectionBase
        //     instance.
        //
        //   context:
        //     A System.Runtime.Serialization.StreamingContext object that contains the source
        //     and destination of the serialized stream associated with the System.Collections.Specialized.NameObjectCollectionBase
        //     instance.
        //
        // Exceptions:
        //   T:System.ArgumentNullException:
        //     info is null.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        public extern virtual void GetObjectData(SerializationInfo info, StreamingContext context);
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     Implements the System.Runtime.Serialization.ISerializable interface and raises
        //     the deserialization event when the deserialization is complete.
        //
        // Parameters:
        //   sender:
        //     The source of the deserialization event.
        //
        // Exceptions:
        //   T:System.Runtime.Serialization.SerializationException:
        //     The System.Runtime.Serialization.SerializationInfo object associated with the
        //     current System.Collections.Specialized.NameObjectCollectionBase instance is invalid.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        public extern virtual void OnDeserialization(object sender);
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     Adds an entry with the specified key and value into the System.Collections.Specialized.NameObjectCollectionBase
        //     instance.
        //
        // Parameters:
        //   name:
        //     The System.String key of the entry to add. The key can be null.
        //
        //   value:
        //     The System.Object value of the entry to add. The value can be null.
        //
        // Exceptions:
        //   T:System.NotSupportedException:
        //     The collection is read-only.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern void BaseAdd(string name, object value);
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     Removes all entries from the System.Collections.Specialized.NameObjectCollectionBase
        //     instance.
        //
        // Exceptions:
        //   T:System.NotSupportedException:
        //     The collection is read-only.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern void BaseClear();
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     Gets the value of the entry at the specified index of the System.Collections.Specialized.NameObjectCollectionBase
        //     instance.
        //
        // Parameters:
        //   index:
        //     The zero-based index of the value to get.
        //
        // Returns:
        //     An System.Object that represents the value of the entry at the specified index.
        //
        // Exceptions:
        //   T:System.ArgumentOutOfRangeException:
        //     index is outside the valid range of indexes for the collection.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern object BaseGet(int index);
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     Gets the value of the first entry with the specified key from the System.Collections.Specialized.NameObjectCollectionBase
        //     instance.
        //
        // Parameters:
        //   name:
        //     The System.String key of the entry to get. The key can be null.
        //
        // Returns:
        //     An System.Object that represents the value of the first entry with the specified
        //     key, if found; otherwise, null.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern object BaseGet(string name);
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     Returns a System.String array that contains all the keys in the System.Collections.Specialized.NameObjectCollectionBase
        //     instance.
        //
        // Returns:
        //     A System.String array that contains all the keys in the System.Collections.Specialized.NameObjectCollectionBase
        //     instance.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern string[] BaseGetAllKeys();
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     Returns an System.Object array that contains all the values in the System.Collections.Specialized.NameObjectCollectionBase
        //     instance.
        //
        // Returns:
        //     An System.Object array that contains all the values in the System.Collections.Specialized.NameObjectCollectionBase
        //     instance.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern object[] BaseGetAllValues();
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     Returns an array of the specified type that contains all the values in the System.Collections.Specialized.NameObjectCollectionBase
        //     instance.
        //
        // Parameters:
        //   type:
        //     A System.Type that represents the type of array to return.
        //
        // Returns:
        //     An array of the specified type that contains all the values in the System.Collections.Specialized.NameObjectCollectionBase
        //     instance.
        //
        // Exceptions:
        //   T:System.ArgumentNullException:
        //     type is null.
        //
        //   T:System.ArgumentException:
        //     type is not a valid System.Type.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern object[] BaseGetAllValues(Type type);
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     Gets the key of the entry at the specified index of the System.Collections.Specialized.NameObjectCollectionBase
        //     instance.
        //
        // Parameters:
        //   index:
        //     The zero-based index of the key to get.
        //
        // Returns:
        //     A System.String that represents the key of the entry at the specified index.
        //
        // Exceptions:
        //   T:System.ArgumentOutOfRangeException:
        //     index is outside the valid range of indexes for the collection.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern string BaseGetKey(int index);
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     Gets a value indicating whether the System.Collections.Specialized.NameObjectCollectionBase
        //     instance contains entries whose keys are not null.
        //
        // Returns:
        //     true if the System.Collections.Specialized.NameObjectCollectionBase instance
        //     contains entries whose keys are not null; otherwise, false.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern bool BaseHasKeys();
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     Removes the entries with the specified key from the System.Collections.Specialized.NameObjectCollectionBase
        //     instance.
        //
        // Parameters:
        //   name:
        //     The System.String key of the entries to remove. The key can be null.
        //
        // Exceptions:
        //   T:System.NotSupportedException:
        //     The collection is read-only.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern void BaseRemove(string name);
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     Removes the entry at the specified index of the System.Collections.Specialized.NameObjectCollectionBase
        //     instance.
        //
        // Parameters:
        //   index:
        //     The zero-based index of the entry to remove.
        //
        // Exceptions:
        //   T:System.ArgumentOutOfRangeException:
        //     index is outside the valid range of indexes for the collection.
        //
        //   T:System.NotSupportedException:
        //     The collection is read-only.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern void BaseRemoveAt(int index);
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     Sets the value of the first entry with the specified key in the System.Collections.Specialized.NameObjectCollectionBase
        //     instance, if found; otherwise, adds an entry with the specified key and value
        //     into the System.Collections.Specialized.NameObjectCollectionBase instance.
        //
        // Parameters:
        //   name:
        //     The System.String key of the entry to set. The key can be null.
        //
        //   value:
        //     The System.Object that represents the new value of the entry to set. The value
        //     can be null.
        //
        // Exceptions:
        //   T:System.NotSupportedException:
        //     The collection is read-only.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern void BaseSet(string name, object value);
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     Sets the value of the entry at the specified index of the System.Collections.Specialized.NameObjectCollectionBase
        //     instance.
        //
        // Parameters:
        //   index:
        //     The zero-based index of the entry to set.
        //
        //   value:
        //     The System.Object that represents the new value of the entry to set. The value
        //     can be null.
        //
        // Exceptions:
        //   T:System.NotSupportedException:
        //     The collection is read-only.
        //
        //   T:System.ArgumentOutOfRangeException:
        //     index is outside the valid range of indexes for the collection.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern void BaseSet(int index, object value);
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it

        //
        // Summary:
        //     Represents a collection of the System.String keys of a collection.
        // [DefaultMember("Item")]
        public class KeysCollection : ICollection, IEnumerable
        {
            //
            // Summary:
            //     Gets the entry at the specified index of the collection.
            //
            // Parameters:
            //   index:
            //     The zero-based index of the entry to locate in the collection.
            //
            // Returns:
            //     The System.String key of the entry at the specified index of the collection.
            //
            // Exceptions:
            //   T:System.ArgumentOutOfRangeException:
            //     index is outside the valid range of indexes for the collection.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
            public extern string this[int index] { get; }
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it

            //
            // Summary:
            //     Gets the number of keys in the System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.
            //
            // Returns:
            //     The number of keys in the System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.
            public int Count { get; }

            public bool IsSynchronized => throw new NotImplementedException();

            public object SyncRoot => throw new NotImplementedException();

            public void CopyTo(Array array, int index)
            {
                throw new NotImplementedException();
            }


            //
            // Summary:
            //     Gets the key at the specified index of the collection.
            //
            // Parameters:
            //   index:
            //     The zero-based index of the key to get from the collection.
            //
            // Returns:
            //     A System.String that contains the key at the specified index of the collection.
            //
            // Exceptions:
            //   T:System.ArgumentOutOfRangeException:
            //     index is outside the valid range of indexes for the collection.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
            public extern virtual string Get(int index);
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
            //
            // Summary:
            //     Returns an enumerator that iterates through the System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.
            //
            // Returns:
            //     An System.Collections.IEnumerator for the System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
            public extern IEnumerator GetEnumerator();
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        }
    }
}