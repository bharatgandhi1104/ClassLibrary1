// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

using System.Collections;
using System.Diagnostics;
using System.Xml;

namespace System.Configuration
{
#pragma warning disable CS0659 // Type overrides Object.Equals(object o) but does not override Object.GetHashCode()
    public abstract class ConfigurationElementCollection : ConfigurationElement, ICollection, IEnumerable
#pragma warning restore CS0659 // Type overrides Object.Equals(object o) but does not override Object.GetHashCode()
    {
#pragma warning disable CS0824 // Constructor is marked external
        protected extern ConfigurationElementCollection();
#pragma warning restore CS0824 // Constructor is marked external
        //
        // Summary:
        //     Creates a new instance of the System.Configuration.ConfigurationElementCollection
        //     class.
        //
        // Parameters:
        //   comparer:
        //     The System.Collections.IComparer comparer to use.
        //
        // Exceptions:
        //   T:System.ArgumentNullException:
        //     comparer is null.
#pragma warning disable CS0824 // Constructor is marked external
        protected extern ConfigurationElementCollection(IComparer comparer);
#pragma warning restore CS0824 // Constructor is marked external

        //
        // Summary:
        //     Gets an object used to synchronize access to the System.Configuration.ConfigurationElementCollection.
        //
        // Returns:
        //     An object used to synchronize access to the System.Configuration.ConfigurationElementCollection.
        public object SyncRoot { get; }
        //
        // Summary:
        //     Gets a value indicating whether access to the collection is synchronized.
        //
        // Returns:
        //     true if access to the System.Configuration.ConfigurationElementCollection is
        //     synchronized; otherwise, false.
        public bool IsSynchronized { get; }
        //
        // Summary:
        //     Gets or sets a value that specifies whether the collection has been cleared.
        //
        // Returns:
        //     true if the collection has been cleared; otherwise, false. The default is false.
        //
        // Exceptions:
        //   T:System.Configuration.ConfigurationErrorsException:
        //     The configuration is read-only.
        public bool EmitClear { get; set; }
        //
        // Summary:
        //     Gets the number of elements in the collection.
        //
        // Returns:
        //     The number of elements in the collection.
        public int Count { get; }
        //
        // Summary:
        //     Gets the type of the System.Configuration.ConfigurationElementCollection.
        //
        // Returns:
        //     The System.Configuration.ConfigurationElementCollectionType of this collection.
        public virtual ConfigurationElementCollectionType CollectionType { get; }
        //
        // Summary:
        //     Gets the name used to identify this collection of elements in the configuration
        //     file when overridden in a derived class.
        //
        // Returns:
        //     The name of the collection; otherwise, an empty string. The default is an empty
        //     string.
        protected virtual string ElementName { get; }
        //
        // Summary:
        //     Gets a value indicating whether an attempt to add a duplicate System.Configuration.ConfigurationElement
        //     to the System.Configuration.ConfigurationElementCollection will cause an exception
        //     to be thrown.
        //
        // Returns:
        //     true if an attempt to add a duplicate System.Configuration.ConfigurationElement
        //     to this System.Configuration.ConfigurationElementCollection will cause an exception
        //     to be thrown; otherwise, false.
        protected virtual bool ThrowOnDuplicate { get; }
        //
        // Summary:
        //     Gets or sets the name of the System.Configuration.ConfigurationElement to associate
        //     with the remove operation in the System.Configuration.ConfigurationElementCollection
        //     when overridden in a derived class.
        //
        // Returns:
        //     The name of the element.
        //
        // Exceptions:
        //   T:System.ArgumentException:
        //     The selected value starts with the reserved prefix "config" or "lock".
        protected internal string RemoveElementName { get; set; }
        //
        // Summary:
        //     Gets or sets the name of the System.Configuration.ConfigurationElement to associate
        //     with the add operation in the System.Configuration.ConfigurationElementCollection
        //     when overridden in a derived class.
        //
        // Returns:
        //     The name of the element.
        //
        // Exceptions:
        //   T:System.ArgumentException:
        //     The selected value starts with the reserved prefix "config" or "lock".
        protected internal string AddElementName { get; set; }
        //
        // Summary:
        //     Gets or sets the name for the System.Configuration.ConfigurationElement to associate
        //     with the clear operation in the System.Configuration.ConfigurationElementCollection
        //     when overridden in a derived class.
        //
        // Returns:
        //     The name of the element.
        //
        // Exceptions:
        //   T:System.ArgumentException:
        //     The selected value starts with the reserved prefix "config" or "lock".
        protected internal string ClearElementName { get; set; }


        //
        // Summary:
        //     Copies the contents of the System.Configuration.ConfigurationElementCollection
        //     to an array.
        //
        // Parameters:
        //   array:
        //     Array to which to copy the contents of the System.Configuration.ConfigurationElementCollection.
        //
        //   index:
        //     Index location at which to begin copying.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        public extern void CopyTo(ConfigurationElement[] array, int index);

        public void CopyTo(Array array, int index)
        {
            throw new NotImplementedException();
        }
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it

        //
        // Summary:
        //     Compares the System.Configuration.ConfigurationElementCollection to the specified
        //     object.
        //
        // Parameters:
        //   compareTo:
        //     The object to compare.
        //
        // Returns:
        //     true if the object to compare with is equal to the current System.Configuration.ConfigurationElementCollection
        //     instance; otherwise, false. The default is false.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        public extern override bool Equals(object compareTo);
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it

        //
        // Summary:
        //     Gets an System.Collections.IEnumerator which is used to iterate through the System.Configuration.ConfigurationElementCollection.
        //
        // Returns:
        //     An System.Collections.IEnumerator which is used to iterate through the System.Configuration.ConfigurationElementCollection.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        public extern IEnumerator GetEnumerator();


        //
        // Summary:
        //     Gets a unique value representing the System.Configuration.ConfigurationElementCollection
        //     instance.
        //
        // Returns:
        //     A unique value representing the System.Configuration.ConfigurationElementCollection
        //     current instance.
#pragma warning disable CS0108 // Member hides inherited member; missing new keyword
        public extern int GetHashCode();
#pragma warning restore CS0108 // Member hides inherited member; missing new keyword

#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     Indicates whether the System.Configuration.ConfigurationElementCollection object
        //     is read only.
        //
        // Returns:
        //     true if the System.Configuration.ConfigurationElementCollection object is read
        //     only; otherwise, false.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
#pragma warning disable CS0114 // Member hides inherited member; missing override keyword
        public extern bool IsReadOnly();
#pragma warning restore CS0114 // Member hides inherited member; missing override keyword
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     Adds a configuration element to the System.Configuration.ConfigurationElementCollection.
        //
        // Parameters:
        //   element:
        //     The System.Configuration.ConfigurationElement to add.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern virtual void BaseAdd(ConfigurationElement element);
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it

        //
        // Summary:
        //     Adds a configuration element to the configuration element collection.
        //
        // Parameters:
        //   index:
        //     The index location at which to add the specified System.Configuration.ConfigurationElement.
        //
        //   element:
        //     The System.Configuration.ConfigurationElement to add.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern virtual void BaseAdd(int index, ConfigurationElement element);
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     Indicates the index of the specified System.Configuration.ConfigurationElement.
        //
        // Parameters:
        //   element:
        //     The System.Configuration.ConfigurationElement for the specified index location.
        //
        // Returns:
        //     The index of the specified System.Configuration.ConfigurationElement; otherwise,
        //     -1.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern int BaseIndexOf(ConfigurationElement element);
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it

        //
        // Summary:
        //     Creates a new System.Configuration.ConfigurationElement when overridden in a
        //     derived class.
        //
        // Parameters:
        //   elementName:
        //     The name of the System.Configuration.ConfigurationElement to create.
        //
        // Returns:
        //     A new System.Configuration.ConfigurationElement with a specified name.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern virtual ConfigurationElement CreateNewElement(string elementName);
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     When overridden in a derived class, creates a new System.Configuration.ConfigurationElement.
        //
        // Returns:
        //     A newly created System.Configuration.ConfigurationElement.
        protected abstract ConfigurationElement CreateNewElement();
        //
        // Summary:
        //     Gets the element key for a specified configuration element when overridden in
        //     a derived class.
        //
        // Parameters:
        //   element:
        //     The System.Configuration.ConfigurationElement to return the key for.
        //
        // Returns:
        //     An System.Object that acts as the key for the specified System.Configuration.ConfigurationElement.
        protected abstract object GetElementKey(ConfigurationElement element);

        //
        // Summary:
        //     Indicates whether the specified System.Configuration.ConfigurationElement exists
        //     in the System.Configuration.ConfigurationElementCollection.
        //
        // Parameters:
        //   elementName:
        //     The name of the element to verify.
        //
        // Returns:
        //     true if the element exists in the collection; otherwise, false. The default is
        //     false.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern virtual bool IsElementName(string elementName);
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it

        //
        // Summary:
        //     Indicates whether the specified System.Configuration.ConfigurationElement can
        //     be removed from the System.Configuration.ConfigurationElementCollection.
        //
        // Parameters:
        //   element:
        //     The element to check.
        //
        // Returns:
        //     true if the specified System.Configuration.ConfigurationElement can be removed
        //     from this System.Configuration.ConfigurationElementCollection; otherwise, false.
        //     The default is true.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern virtual bool IsElementRemovable(ConfigurationElement element);
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it


        //
        // Summary:
        //     Causes the configuration system to throw an exception.
        //
        // Parameters:
        //   elementName:
        //     The name of the unrecognized element.
        //
        //   reader:
        //     An input stream that reads XML from the configuration file.
        //
        // Returns:
        //     true if the unrecognized element was deserialized successfully; otherwise, false.
        //     The default is false.
        //
        // Exceptions:
        //   T:System.Configuration.ConfigurationErrorsException:
        //     The element specified in elementName is the <clear> element.
        //
        //   T:System.ArgumentException:
        //     elementName starts with the reserved prefix "config" or "lock".
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
#pragma warning disable CS0114 // Member hides inherited member; missing override keyword
        protected extern bool OnDeserializeUnrecognizedElement(string elementName, XmlReader reader);
#pragma warning restore CS0114 // Member hides inherited member; missing override keyword
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     Adds a configuration element to the configuration element collection.
        //
        // Parameters:
        //   element:
        //     The System.Configuration.ConfigurationElement to add.
        //
        //   throwIfExists:
        //     true to throw an exception if the System.Configuration.ConfigurationElement specified
        //     is already contained in the System.Configuration.ConfigurationElementCollection;
        //     otherwise, false.
        //
        // Exceptions:
        //   T:System.Exception:
        //     The System.Configuration.ConfigurationElement to add already exists in the System.Configuration.ConfigurationElementCollection
        //     and the throwIfExists parameter is true.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern internal void BaseAdd(ConfigurationElement element, bool throwIfExists);
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it

        //
        // Summary:
        //     Removes all configuration element objects from the collection.
        //
        // Exceptions:
        //   T:System.Configuration.ConfigurationErrorsException:
        //     The configuration is read-only.- or -A collection item has been locked in a higher-level
        //     configuration.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern internal void BaseClear();
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     Returns the configuration element with the specified key.
        //
        // Parameters:
        //   key:
        //     The key of the element to return.
        //
        // Returns:
        //     The System.Configuration.ConfigurationElement with the specified key; otherwise,
        //     null.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern internal ConfigurationElement BaseGet(object key);
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it

        //
        // Summary:
        //     Gets the configuration element at the specified index location.
        //
        // Parameters:
        //   index:
        //     The index location of the System.Configuration.ConfigurationElement to return.
        //
        // Returns:
        //     The System.Configuration.ConfigurationElement at the specified index.
        //
        // Exceptions:
        //   T:System.Configuration.ConfigurationErrorsException:
        //     index is less than 0.- or -There is no System.Configuration.ConfigurationElement
        //     at the specified index.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern internal ConfigurationElement BaseGet(int index);
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it

        //
        // Summary:
        //     Returns an array of the keys for all of the configuration elements contained
        //     in the System.Configuration.ConfigurationElementCollection.
        //
        // Returns:
        //     An array that contains the keys for all of the System.Configuration.ConfigurationElement
        //     objects contained in the System.Configuration.ConfigurationElementCollection.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern internal object[] BaseGetAllKeys();
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     Gets the key for the System.Configuration.ConfigurationElement at the specified
        //     index location.
        //
        // Parameters:
        //   index:
        //     The index location for the System.Configuration.ConfigurationElement.
        //
        // Returns:
        //     The key for the specified System.Configuration.ConfigurationElement.
        //
        // Exceptions:
        //   T:System.Configuration.ConfigurationErrorsException:
        //     index is less than 0.- or -There is no System.Configuration.ConfigurationElement
        //     at the specified index.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern internal object BaseGetKey(int index);
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     Indicates whether the System.Configuration.ConfigurationElement with the specified
        //     key has been removed from the System.Configuration.ConfigurationElementCollection.
        //
        // Parameters:
        //   key:
        //     The key of the element to check.
        //
        // Returns:
        //     true if the System.Configuration.ConfigurationElement with the specified key
        //     has been removed; otherwise, false. The default is false.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern internal bool BaseIsRemoved(object key);
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     Removes a System.Configuration.ConfigurationElement from the collection.
        //
        // Parameters:
        //   key:
        //     The key of the System.Configuration.ConfigurationElement to remove.
        //
        // Exceptions:
        //   T:System.Exception:
        //     No System.Configuration.ConfigurationElement with the specified key exists in
        //     the collection, the element has already been removed, or the element cannot be
        //     removed because the value of its System.Configuration.ConfigurationProperty.Type
        //     is not System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern internal void BaseRemove(object key);
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     Removes the System.Configuration.ConfigurationElement at the specified index
        //     location.
        //
        // Parameters:
        //   index:
        //     The index location of the System.Configuration.ConfigurationElement to remove.
        //
        // Exceptions:
        //   T:System.Configuration.ConfigurationErrorsException:
        //     The configuration is read-only.- or - index is less than 0 or greater than the
        //     number of System.Configuration.ConfigurationElement objects in the collection.-
        //     or -The System.Configuration.ConfigurationElement object has already been removed.-
        //     or -The value of the System.Configuration.ConfigurationElement object has been
        //     locked at a higher level.- or -The System.Configuration.ConfigurationElement
        //     object was inherited.- or -The value of the System.Configuration.ConfigurationElement
        //     object's System.Configuration.ConfigurationProperty.Type is not System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap
        //     or System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern internal void BaseRemoveAt(int index);
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     Indicates whether this System.Configuration.ConfigurationElementCollection has
        //     been modified since it was last saved or loaded when overridden in a derived
        //     class.
        //
        // Returns:
        //     true if any contained element has been modified; otherwise, false
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern internal override bool IsModified();
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it

        //
        // Summary:
        //     Resets the System.Configuration.ConfigurationElementCollection to its unmodified
        //     state when overridden in a derived class.
        //
        // Parameters:
        //   parentElement:
        //     The System.Configuration.ConfigurationElement representing the collection parent
        //     element, if any; otherwise, null.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        protected extern internal override void Reset(ConfigurationElement parentElement);
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it


        //
        // Summary:
        //     Resets the value of the System.Configuration.ConfigurationElementCollection.IsModified
        //     property to false when overridden in a derived class.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
#pragma warning disable CS0114 // Member hides inherited member; missing override keyword
        protected extern internal void ResetModified();
#pragma warning restore CS0114 // Member hides inherited member; missing override keyword
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     Writes the configuration data to an XML element in the configuration file when
        //     overridden in a derived class.
        //
        // Parameters:
        //   writer:
        //     Output stream that writes XML to the configuration file.
        //
        //   serializeCollectionKey:
        //     true to serialize the collection key; otherwise, false.
        //
        // Returns:
        //     true if the System.Configuration.ConfigurationElementCollection was written to
        //     the configuration file successfully.
        //
        // Exceptions:
        //   T:System.ArgumentException:
        //     One of the elements in the collection was added or replaced and starts with the
        //     reserved prefix "config" or "lock".
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
#pragma warning disable CS0114 // Member hides inherited member; missing override keyword
        protected extern internal bool SerializeElement(XmlWriter writer, bool serializeCollectionKey);
#pragma warning restore CS0114 // Member hides inherited member; missing override keyword
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     Sets the System.Configuration.ConfigurationElementCollection.IsReadOnly property
        //     for the System.Configuration.ConfigurationElementCollection object and for all
        //     sub-elements.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
#pragma warning disable CS0114 // Member hides inherited member; missing override keyword
        protected extern internal void SetReadOnly();
#pragma warning restore CS0114 // Member hides inherited member; missing override keyword
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
        //
        // Summary:
        //     Reverses the effect of merging configuration information from different levels
        //     of the configuration hierarchy
        //
        // Parameters:
        //   sourceElement:
        //     A System.Configuration.ConfigurationElement object at the current level containing
        //     a merged view of the properties.
        //
        //   parentElement:
        //     The parent System.Configuration.ConfigurationElement object of the current element,
        //     or null if this is the top level.
        //
        //   saveMode:
        //     A System.Configuration.ConfigurationSaveMode enumerated value that determines
        //     which property values to include.
#pragma warning disable CS0626 // Method, operator, or accessor is marked external and has no attributes on it
#pragma warning disable CS0114 // Member hides inherited member; missing override keyword
        protected extern internal void Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode);
#pragma warning restore CS0114 // Member hides inherited member; missing override keyword
#pragma warning restore CS0626 // Method, operator, or accessor is marked external and has no attributes on it
    }
}
